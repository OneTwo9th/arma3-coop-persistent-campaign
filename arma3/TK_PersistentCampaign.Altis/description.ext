author = "[TK]Pix";  /* Hier kann der Names des Missionserstellers eingetragen werden. Dieser erscheint dann beim Laden unterhalb des Missionsnamens. Wird kein Text angegeben, so erscheint Unknown Author. */
onLoadName = "[TK]Persistent Campaign"; /* Mission Name*/
onLoadMission = "Eine persistent gespeicherte Coop Mission, die in Angriffs- und Logistikzyklen unterteilt ist."; /* Beschreibung*/
OnLoadIntro = "by [TK]Pix";
onLoadMissionTime = true; /* Mit diesem Eintrag k√∂nnt ihr durch die Variablen true oder false festlegen ob Datum und Uhrzeit beim laden der Mission oder des Intros eingeblendet werden soll.*/
onLoadIntroTime = false;   /* Mit diesem Eintrag k√∂nnt ihr durch die Variablen true oder false festlegen ob Datum und Uhrzeit beim laden der Mission oder des Intros eingeblendet werden soll.*/
loadScreen = "loadScreen.paa"; /*Mit LoadScreen wird ein Bild w√∂hrend des Ladens der init.sqf eingeblendet. Die Bilddatei muss im Missionsordner (bzw. einem Unterordner) vorhanden sein. "pfad\zum\bild.paa"*/
briefing = 1; /* Mit diesen Eintr√§gen kann eingestellt werden, ob zu Beginn der Mission ein Briefing und nach der Mission ein Debriefing angezeigt werden soll. M√∂gliche Werte sind 0 (= wird nicht angezeigt) und 1 (= wird angezeigt).*/
debriefing = 1;   /* Mit diesen Eintr√§gen kann eingestellt werden, ob zu Beginn der Mission ein Briefing und nach der Mission ein Debriefing angezeigt werden soll. M√∂gliche Werte sind 0 (= wird nicht angezeigt) und 1 (= wird angezeigt).*/
disabledAI = true;
showCompass = 1;
showGPS = 1;
showMap = 1;
showNotepad = 0;
showRadio = 1;
showWatch = 1;
enableDebugConsole = 1;
respawnDelay = 5;
respawnDialog = 1; 			/* legt fest ob w√§hrend des Respawns die Multiplayer-Statistik sowie ein Respawn-Countdown angezeigt werden soll.*/
enableItemsDropping = 0; 	/* Mit diesem Eintrag kann eingestellt werden, ob eine Einheit beim schwimmen nach einer Weile ihre Ausr√ºstung verliert oder nicht. M√∂gliche Werte sind 0 (= Einheit verliert keine Ausr√ºstung) und 1 (= Einheit verliert ihre Ausr√ºstung).*/
joinUnassigned = 1; 		/* Hier kann festgelegt werden, ob ein Spieler welcher ein MP Spiel betritt automatisch einen Spielerslot zugewiesen bekommt.M√∂gliche Werte sind 0 (=wird kein Slot zugewiesen) und 1 (=wird ein Slot zugewiesen).*/
allowFunctionsRecompile = 1;
allowFunctionsLog=1;
/*
0 / "NONE" - Kein Respawn
1 / "BIRD" - Respawn als M√∂we / Kr√§he
2 / "INSTANT" - Respawn an der Stelle an der der Spieler gestorben ist
3 / "BASE" - Respawn an einer festgelegten Position (ben√∂tigt einen Marker mit dem Namen "respawn_west", "respawn_east", "respawn_guerilla", "respawn_Civilian"; sollen Fahrzeuge ebenfalls respawnen, werden entsprechende Marker mit den Namen "respawn_vehicle_west", "respawn_vehicle_east", "respawn_vehicle_guerilla", "respawn_vehicle_civilian" benˆtigt)
4 / "GROUP" - Respawn in eine (noch lebende) KI Einheit der eigenen Gruppe
5 / "SIDE" - Respawn in eine (noch lebende) KI Einheit der eigenen Seite
*/
respawn = BASE;

/*
0 = Global
1 = Side
2 = Command
3 = Group
4 = Vehicle
5 = Direct
6 = System
*/
disableChannels[]={2,5,6};

class CfgFunctions
{
	#include "functions\cfgfunctions.hpp"
};


class Params
{
	class Debug /* paramsArray[0]*/
	{		
	    title = "Debug";
	    values[] = {0, 1};
	    texts[] = {"Aus", "An"};
	    default = 0;
	};	
	class ZoneCaptureTime /* paramsArray[1]*/
	{		
	    title = "Zeit f√ºr Einnahme der Zone";
	    values[] = {30, 60, 90, 120, 150, 180, 1000};
	    texts[] = {"30min", "60min", "90min", "120min", "150min", "180min", "1000min"};
	    default = 120;
	};
	class MissionFactor /* paramsArray[2]*/
	{		
	    title = "Schwierigkeitsgrad";
	    values[] = {0, 1, 2, 3};
	    texts[] = {"Einfach", "Normal", "Schwer", "Sehr schwer"};
	    default = 1;
	};
	class ZoneAttackType /* paramsArray[3]*/
	{		
	    title = "Zonen Angriffstyp";
	    values[] = {0, 1, 2};
	    texts[] = {"Zufall", "Angriff", "Gegenangriff"};
	    default = 0;
	};
	class ReverseAttack /* paramsArray[4]*/
	{		
	    title = "Gegenangriff nach";
	    values[] = {5, 10, 15, 20, 30};
	    texts[] = {"5 min.", "10 min.", "15 min.", "20 min.", "30 min."};
	    default = 5;
	};
	class TimeSettings /* paramsArray[5]*/
	{		
	    title = "Aktuelle Zeit";
	    values[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24};
	    texts[] = {"0 Uhr", "1 Uhr", "2 Uhr", "3 Uhr", "4 Uhr", "5 Uhr", "6 Uhr", "7 Uhr", "8 Uhr", "9 Uhr", "10 Uhr", "11 Uhr", "12 Uhr", "13 Uhr", "14 Uhr", "15 Uhr", "16 Uhr", "17 Uhr", "18 Uhr", "19 Uhr", "20 Uhr", "21 Uhr", "22 Uhr", "23 Uhr", "Zuf√§llig"};
	    default = 24;
	};
};

class Header
{
  gameType = COOP;            
  minPlayers = 1;             
  maxPlayers = 30;            
  playerCountMultipleOf = 1;  
};


#include "dialogDefines.hpp"
#include "pixLogistic\dialogs.hpp"
	
class RscTitles 
{
	#include "pixLogistic\lift\dialogHUD\classes.hpp"
};	